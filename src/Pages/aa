import React, { useState, useEffect } from "react";
import "../Css/Cart.css";

const Cart = ({ cart, setCart, handleChange }) => {
  const [price, setPrice] = useState(0);

  const handleRemove = (id) => {
    const arr = cart.filter((item) => item.id !== id);
    setCart(arr);
    handlePrice();
  };

  const handlePrice = () => {
    let ans = 0;
    cart.map((item) => (ans += item.amount * item.price));
    setPrice(ans);
  };

  useEffect(() => {
    handlePrice();
  });

  return (
    <article>
      {cart.map((item) => (
        <div className="cart_box" key={item.id}>
          <div className="cart_img">
            <img src={item.image} alt="" />
            <p>{item.title}</p>
          </div>
          <div>
            <button onClick={() => handleChange(item, 1)}>+</button>
            <button>{item.amount}</button>
            <button onClick={() => handleChange(item, -1)}>-</button>
          </div>
          <div>
            <span>{item.price}</span>
            <button onClick={() => handleRemove(item.id)}>Remove</button>
          </div>
        </div>
      ))}
      <div className="total">
        <span>Total Price of your Cart</span>
        <span>Rs - {price}</span>
      </div>
    </article>
  );
};

export default Cart;






import React, { useState, useEffect } from "react";
import "../Css/Cart.css";
const Cart = ({ cart, setCart, handleChange }) => {
  const [price, setPrice] = useState(0);

  const handleRemove = (id) => {
    const arr = cart.filter((item) => item.id !== id);
    setCart(arr);
    handlePrice();
  };

  const handlePrice = () => {
    let ans = 0;
    cart.map((item) => (ans += item.amount * item.price));
    setPrice(ans);
  };

  useEffect(() => {
    handlePrice();
  });

  return (
    <div>
      {cart.map((item) => {
        return (
          <div className="product-card">
            <img src={item.image} className="product-image" alt="..." />
            <div className="product-body">
              <h5 className="product-title">{item.title}</h5>

              <p className="product-price" style={{ maxWidth: 250 }}>
                $ {item.price}
              </p>
              <div>
                <button className="qty" onClick={() => handleChange(item, 1)}>
                  +
                </button>
                <button className="qty">{item.amount}</button>
                <button className="qty" onClick={() => handleChange(item, -1)}>
                  -
                </button>

                <button
                  className="cart-button1"
                  onClick={() => handleRemove(item.id)}
                >
                  Remove
                </button>
              </div>
            </div>
          </div>
        );
      })}
      <div className="total">
        <span>Total Price of your Cart ::</span>
        <span> {price} $</span>
      </div>
    </div>
  );
};

export default Cart;



import React, { useState, useEffect } from "react";
import axios from "axios";
import "../Css/Products.css";
import { Link } from "react-router-dom";
import StarRatings from "react-star-ratings";
import image1 from "../Images/Products/Image1.jpg";
import image2 from "../Images/Products/Image2.jpg";
import image3 from "../Images/Products/Image3.jpg";
import image4 from "../Images/Products/Image4.jpg";
import image5 from "../Images/Products/Image5.jpg";
import image6 from "../Images/Products/Image6.jpg";
import image7 from "../Images/Products/Image7.jpg";
import image8 from "../Images/Products/Image8.jpg";
import image9 from "../Images/Products/Image9.jpg";
import image10 from "../Images/Products/Image10.jpg";
import image11 from "../Images/Products/Image11.jpg";
import image12 from "../Images/Products/Image12.jpg";
import { useCart } from "react-use-cart";
import Product from "./Product";
const products = [
  {
    id: 1,
    title: "Black Coffe",
    price: "495  ",
    description:
      "Black coffee is low in calories and contains small amounts of several vitamins and minerals, along with plant compounds like caffeine and chlorogenic acid",
    image: image1,
    Rate: 4,
    amount: 1,
  },
  {
    id: 2,
    title: "Cappuccino ",
    price: "299  ",
    description:
      "A cappuccino is the perfect balance of espresso, steamed milk and foam. This coffee is all about the structure and the even splitting of all elements into equal thirds",
    image: image2,
    Rate: 4.5,
    amount: 1,
  },
  {
    id: 3,
    title: "Espresso",
    price: "330  ",
    description:
      "Espresso is a delicious concentrated form of coffee, served in shots and it’s often the coffee base of many other beverages, such as cappuccino, latte, americano and macchiato.",
    image: image3,
    Rate: 5,
    amount: 1,
  },
  {
    id: 4,
    title: "Latte Coffe",
    price: "360  ",
    description:
      "A latte or caffè latte is a milk coffee that boasts a silky layer of foam as a real highlight to the drink. A true latte will be made up of one or two shots of espresso, steamed milk and a final, thin layer of frothed milk on top.",
    Rate: 3.5,
    image: image4,
    amount: 1,
  },
  {
    id: 5,
    title: "Americano",
    price: "845  ",
    description:
      "An americano is quite simply just hot water and espresso. It’ll either be served 1/2 and 1/2 or 1/3 espresso to 2/3 water, depending on the coffee shop in question or how you’ve chosen to brew it.",
    image: image5,
    Rate: 3,
    amount: 1,
  },
  {
    id: 6,
    title: "Cold Brew",
    price: "300  ",
    description:
      "Cold brew coffee is amazingly simple to make at home. With my tips (and a quick little video) you’ll have the perfect glass of cold brew coffee and will never have to buy it from the store again.",
    image: image6,
    Rate: 4,
    amount: 1,
  },
  {
    id: 7,
    title: "Filter Coffe",
    price: "399  ",
    description:
      "Filter coffee is a versatile beverage with numerous variations, offering unique flavors and textures to fit different preferences. This section will provide a brief overview of some popular filter coffee variations.",
    image: image7,
    Rate: 4.5,
    amount: 1,
  },
  {
    id: 8,
    title: "Mocha",
    price: "1568  ",
    description:
      "Essentially, 'mocha' means a type of good quality coffee that is made from a specific coffee bean. The beans are from the plant species called Coffee Arabica, and it was originally only grown in Mocha, Yemen.",
    image: image8,
    Rate: 5,
    amount: 1,
  },
  {
    id: 9,
    title: "Irish",
    price: "150  ",
    description:
      "Irish coffee has four main ingredients: coffee, Irish whiskey, sugar and cream. But there are many variations of this classic coffee drink, which we willl explore later.",
    Rate: 4,
    image: image9,
    amount: 1,
  },
  {
    id: 10,
    title: "Caramel Mocchiato ",
    price: "350  ",
    description:
      "The Caramel Macchiato is essentially a not-too-sweet vanilla latte topped with caramel. The “macchiato” distinction is due to the fact the espresso is layered on top of the milk, as opposed to the Starbucks latte, which does the opposite.",
    image: image10,
    Rate: 5,
    amount: 1,
  },
  {
    id: 11,
    title: "Turkish Coffe",
    price: "500  ",
    description:
      " Turkish coffee is made of very finely ground coffee beans, and is also different from other types of coffee in that it is brewed by boiling in traditional copper pots called cezve. Turkish coffee is more aromatic and thicker compared to other coffees",
    image: image11,
    Rate: 4.5,
    amount: 1,
  },
  {
    id: 12,
    title: "Affogato",
    price: "499  ",
    description:
      "Affogato  coffee, dessert and your after dinner drink, all rolled into one. This is what you have when you’re “too full for dessert”! Just pour espresso coffee over vanilla gelato or ice cream,",
    image: image12,
    Rate: 3.5,
    amount: 1,
  },
];
const Products = ({ handleClick }) => {
  const { addItem } = useCart();
  const [search, setSearch] = useState("");
  const [filteredProducts, setFilteredProducts] = useState([]);
  useEffect(() => {
    setFilteredProducts(
      products.filter((product) =>
        product.title.toLowerCase().includes(search.toLowerCase())
      )
    );
  }, [search, products]);

  const Truncate = (string, number) => {
    if (!string) {
      return null;
    }
    if (string.length <= number) {
      return string;
    }
    return string.slice(0, number) + "...";
  };
  return (
    <div className="main0">
      <div className="wrap">
        <div className="search">
          <input
            type="text"
            className="searchTerm"
            id="input_text"
            placeholder="Search Products"
            onChange={(e) => setSearch(e.target.value)}
          />
          <button type="submit" className="searchButton">
            <i className="fa fa-search" />
          </button>
        </div>
      </div>
      {filteredProducts?.length ? (
        <div className="main">
          {filteredProducts.map((item) => {
            return (
              <div className="product-card">
                <img src={item.image} className="product-image" alt="..." />
                <div className="product-body">
                  <h5 className="product-title">{Truncate(item.title, 25)}</h5>
                  <p className="product-text" style={{ maxWidth: 250 }}>
                    {Truncate(item.description, 55)}
                  </p>
                  <p className="product-price" style={{ maxWidth: 250 }}>
                    $ {item.price}
                  </p>

                  <Link>
                    <button
                      className="product-button1"
                      onClick={() => handleClick(item)}
                    >
                      Add To Cart
                    </button>
                  </Link>
                  <Link to={`/products/${item.id}`} state={item}>
                    <button className="product-button2">More Info</button>
                  </Link>
                </div>
              </div>
            );
          })}
        </div>
      ) : (
        <div className="no-products">
          <h1 className="no-products1">SORRY ☹️!!!</h1>
          <h1 className="no-products2">No Products Found !!!</h1>
        </div>
      )}
    </div>
  );
};

export default Products;











USE tempdb;
GO
CREATE TABLE products(
  id INT NOT NULL PRIMARY KEY,
  title VARCHAR(255) UNIQUE,

)

CREATE TABLE stocks(
  product_id INT FOREIGN KEY REFERENCES PRODUCTS(products.id),
  quantity INT,

)

CREATE TABLE returns(
  product_id INT INT FOREIGN KEY REFERENCES PRODUCTS(products.id),
  dt VARCHAR(19),

)